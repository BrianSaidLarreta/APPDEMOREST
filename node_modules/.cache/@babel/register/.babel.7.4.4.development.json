{
  "{\"sourceRoot\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"filename\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\infra\\proyectos\\appdemorest",
      "filename": "C:\\infra\\proyectos\\appdemorest\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\infra\\proyectos\\appdemorest",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\infra\\proyectos\\appdemorest\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\infra\\proyectos\\appdemorest\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _ENV = require(\"./ENV\");\n\nvar _events = _interopRequireDefault(require(\"./routes/events.route\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar allowCrossDomain = function allowCrossDomain(req, res, next) {\n  res.header('Access-Control-Allow-Origin', \"*\");\n  res.header('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE');\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n};\n\nvar app = (0, _express[\"default\"])().use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(allowCrossDomain);\napp.listen(_ENV.ENVIRONMENT.SERVER_PORT,\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            app.use(allowCrossDomain);\n            console.log(\"Express ejecutado correctamente\");\n\n            _mongoose[\"default\"].connect(_ENV.ENVIRONMENT.BD_URL_CONNECTION.DEVELOPING, {\n              useNewUrlParser: true\n            }).then(function () {\n              console.log('Successful connection to MongoDB');\n              app.get(_ENV.ENVIRONMENT.ROUTES_MAIN_MODULES.INDEX, function (req, res) {\n                res.status(200);\n                res.send(\"¡Hola Mundo!\" + \"</br>\" + \"¡Successful Connection to MongoDB\" + \"</br>\" + \"¡Server Web APIs - REST DEMO - ON LINE!\");\n                res.en();\n              });\n              app.use(_ENV.ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.NAME_ROUTE, _events[\"default\"]);\n            })[\"catch\"](function (err) {\n              app.get(_ENV.ENVIRONMENT.ROUTES_MAIN_MODULES.INDEX, function (req, res) {\n                res.status(500).send('error', {\n                  'error': err\n                });\n                res.end();\n              });\n            });\n          } catch (err) {\n            app.get(_ENV.ENVIRONMENT.ROUTER_MAIN_MODULES.INDEX, function (req, res) {\n              res.status(500).send('error', {\n                'error': err\n              });\n              res.end();\n            });\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFsbG93Q3Jvc3NEb21haW4iLCJyZXEiLCJyZXMiLCJuZXh0IiwiaGVhZGVyIiwiYXBwIiwidXNlIiwiYm9keXBhcnNlciIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJsaXN0ZW4iLCJFTlZJUk9OTUVOVCIsIlNFUlZFUl9QT1JUIiwiY29uc29sZSIsImxvZyIsIm1vbmdvb3NlIiwiY29ubmVjdCIsIkJEX1VSTF9DT05ORUNUSU9OIiwiREVWRUxPUElORyIsInVzZU5ld1VybFBhcnNlciIsInRoZW4iLCJnZXQiLCJST1VURVNfTUFJTl9NT0RVTEVTIiwiSU5ERVgiLCJzdGF0dXMiLCJzZW5kIiwiZW4iLCJFVkVOVFMiLCJOQU1FX1JPVVRFIiwicm91dGVzRXZlbnRzIiwiZXJyIiwiZW5kIiwiUk9VVEVSX01BSU5fTU9EVUxFUyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFDQSxJQUFJQSxnQkFBZ0IsR0FBQyxTQUFqQkEsZ0JBQWlCLENBQVNDLEdBQVQsRUFBYUMsR0FBYixFQUFpQkMsSUFBakIsRUFBc0I7QUFDdkNELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDZCQUFYLEVBQXlDLEdBQXpDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDhCQUFYLEVBQTBDLHFCQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEwQyxjQUExQztBQUNBRCxFQUFBQSxJQUFJO0FBQ1AsQ0FMRDs7QUFNQSxJQUFNRSxHQUFHLEdBQUMsMkJBQVVDLEdBQVYsQ0FBY0MsdUJBQVdDLElBQVgsRUFBZCxDQUFWO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0UsVUFBWCxDQUFzQjtBQUFDQyxFQUFBQSxRQUFRLEVBQUM7QUFBVixDQUF0QixDQUFSO0FBQ0FMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTixnQkFBUjtBQUNBSyxHQUFHLENBQUNNLE1BQUosQ0FBV0MsaUJBQVlDLFdBQXZCO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0JBQW1DO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDL0IsY0FBRztBQUNDUixZQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUU4sZ0JBQVI7QUFDQWMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksaUNBQVo7O0FBQ0FDLGlDQUFTQyxPQUFULENBQWlCTCxpQkFBWU0saUJBQVosQ0FBOEJDLFVBQS9DLEVBQTBEO0FBQUNDLGNBQUFBLGVBQWUsRUFBQztBQUFqQixhQUExRCxFQUNLQyxJQURMLENBQ1UsWUFBSTtBQUNOUCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQ0FBWjtBQUNBVixjQUFBQSxHQUFHLENBQUNpQixHQUFKLENBQVFWLGlCQUFZVyxtQkFBWixDQUFnQ0MsS0FBeEMsRUFBOEMsVUFBQ3ZCLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQ3JEQSxnQkFBQUEsR0FBRyxDQUFDdUIsTUFBSixDQUFXLEdBQVg7QUFDQXZCLGdCQUFBQSxHQUFHLENBQUN3QixJQUFKLENBQVMsaUJBQWUsT0FBZixHQUNMLG1DQURLLEdBQytCLE9BRC9CLEdBRUwseUNBRko7QUFJQXhCLGdCQUFBQSxHQUFHLENBQUN5QixFQUFKO0FBQ0gsZUFQRDtBQVFBdEIsY0FBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFNLGlCQUFZVyxtQkFBWixDQUFnQ0ssTUFBaEMsQ0FBdUNDLFVBQS9DLEVBQTBEQyxrQkFBMUQ7QUFDSCxhQVpMLFdBWWEsVUFBQUMsR0FBRyxFQUFFO0FBQ1YxQixjQUFBQSxHQUFHLENBQUNpQixHQUFKLENBQVFWLGlCQUFZVyxtQkFBWixDQUFnQ0MsS0FBeEMsRUFBOEMsVUFBQ3ZCLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQ3JEQSxnQkFBQUEsR0FBRyxDQUFDdUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLE9BQXJCLEVBQTZCO0FBQUMsMkJBQVFLO0FBQVQsaUJBQTdCO0FBQ0E3QixnQkFBQUEsR0FBRyxDQUFDOEIsR0FBSjtBQUNILGVBSEQ7QUFJSCxhQWpCTDtBQWtCSCxXQXJCRCxDQXNCQSxPQUFPRCxHQUFQLEVBQVk7QUFDUjFCLFlBQUFBLEdBQUcsQ0FBQ2lCLEdBQUosQ0FBUVYsaUJBQVlxQixtQkFBWixDQUFnQ1QsS0FBeEMsRUFBOEMsVUFBQ3ZCLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQ3JEQSxjQUFBQSxHQUFHLENBQUN1QixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsT0FBckIsRUFBNkI7QUFBQyx5QkFBUUs7QUFBVCxlQUE3QjtBQUNBN0IsY0FBQUEsR0FBRyxDQUFDOEIsR0FBSjtBQUNILGFBSEQ7QUFJSDs7QUE1QjhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQW5DIiwic291cmNlUm9vdCI6IkM6XFxpbmZyYVxccHJveWVjdG9zXFxhcHBkZW1vcmVzdFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBib2R5cGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcclxuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IHtFTlZJUk9OTUVOVH0gZnJvbSBcIi4vRU5WXCI7XHJcbmltcG9ydCByb3V0ZXNFdmVudHMgZnJvbSAnLi9yb3V0ZXMvZXZlbnRzLnJvdXRlJztcclxudmFyIGFsbG93Q3Jvc3NEb21haW49ZnVuY3Rpb24ocmVxLHJlcyxuZXh0KXtcclxuICAgIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsXCIqXCIpO1xyXG4gICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsJ0dFVCxQT1NULFBVVCxERUxFVEUnKTtcclxuICAgIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLCdDb250ZW50LVR5cGUnKTtcclxuICAgIG5leHQoKTtcclxufTtcclxuY29uc3QgYXBwPWV4cHJlc3MoKS51c2UoYm9keXBhcnNlci5qc29uKCkpO1xyXG5hcHAudXNlKGJvZHlwYXJzZXIuanNvbigpKTtcclxuYXBwLnVzZShib2R5cGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOmZhbHNlfSkpO1xyXG5hcHAudXNlKGFsbG93Q3Jvc3NEb21haW4pO1xyXG5hcHAubGlzdGVuKEVOVklST05NRU5ULlNFUlZFUl9QT1JULGFzeW5jKCk9PntcclxuICAgIHRyeXtcclxuICAgICAgICBhcHAudXNlKGFsbG93Q3Jvc3NEb21haW4pO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiRXhwcmVzcyBlamVjdXRhZG8gY29ycmVjdGFtZW50ZVwiKTtcclxuICAgICAgICBtb25nb29zZS5jb25uZWN0KEVOVklST05NRU5ULkJEX1VSTF9DT05ORUNUSU9OLkRFVkVMT1BJTkcse3VzZU5ld1VybFBhcnNlcjp0cnVlfSlcclxuICAgICAgICAgICAgLnRoZW4oKCk9PntcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsIGNvbm5lY3Rpb24gdG8gTW9uZ29EQicpO1xyXG4gICAgICAgICAgICAgICAgYXBwLmdldChFTlZJUk9OTUVOVC5ST1VURVNfTUFJTl9NT0RVTEVTLklOREVYLChyZXEscmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKTtcclxuICAgICAgICAgICAgICAgICAgICByZXMuc2VuZChcIsKhSG9sYSBNdW5kbyFcIitcIjwvYnI+XCIrXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiwqFTdWNjZXNzZnVsIENvbm5lY3Rpb24gdG8gTW9uZ29EQlwiK1wiPC9icj5cIitcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCLCoVNlcnZlciBXZWIgQVBJcyAtIFJFU1QgREVNTyAtIE9OIExJTkUhXCJcclxuICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5lbigpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBhcHAudXNlKEVOVklST05NRU5ULlJPVVRFU19NQUlOX01PRFVMRVMuRVZFTlRTLk5BTUVfUk9VVEUscm91dGVzRXZlbnRzKTtcclxuICAgICAgICAgICAgfSkuY2F0Y2goZXJyPT57XHJcbiAgICAgICAgICAgICAgICBhcHAuZ2V0KEVOVklST05NRU5ULlJPVVRFU19NQUlOX01PRFVMRVMuSU5ERVgsKHJlcSxyZXMpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ2Vycm9yJyx7J2Vycm9yJzplcnJ9KTtcclxuICAgICAgICAgICAgICAgICAgICByZXMuZW5kKCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgYXBwLmdldChFTlZJUk9OTUVOVC5ST1VURVJfTUFJTl9NT0RVTEVTLklOREVYLChyZXEscmVzKT0+e1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnZXJyb3InLHsnZXJyb3InOmVycn0pO1xyXG4gICAgICAgICAgICByZXMuZW5kKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "allowCrossDomain",
        "req",
        "res",
        "next",
        "header",
        "app",
        "use",
        "bodyparser",
        "json",
        "urlencoded",
        "extended",
        "listen",
        "ENVIRONMENT",
        "SERVER_PORT",
        "console",
        "log",
        "mongoose",
        "connect",
        "BD_URL_CONNECTION",
        "DEVELOPING",
        "useNewUrlParser",
        "then",
        "get",
        "ROUTES_MAIN_MODULES",
        "INDEX",
        "status",
        "send",
        "en",
        "EVENTS",
        "NAME_ROUTE",
        "routesEvents",
        "err",
        "end",
        "ROUTER_MAIN_MODULES"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACA,IAAIA,gBAAgB,GAAC,SAAjBA,gBAAiB,CAASC,GAAT,EAAaC,GAAb,EAAiBC,IAAjB,EAAsB;AACvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAAyC,GAAzC;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA0C,qBAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA0C,cAA1C;AACAD,EAAAA,IAAI;AACP,CALD;;AAMA,IAAME,GAAG,GAAC,2BAAUC,GAAV,CAAcC,uBAAWC,IAAX,EAAd,CAAV;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQN,gBAAR;AACAK,GAAG,CAACM,MAAJ,CAAWC,iBAAYC,WAAvB;AAAA;AAAA;AAAA;AAAA,wBAAmC;AAAA;AAAA;AAAA;AAAA;AAC/B,cAAG;AACCR,YAAAA,GAAG,CAACC,GAAJ,CAAQN,gBAAR;AACAc,YAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACAC,iCAASC,OAAT,CAAiBL,iBAAYM,iBAAZ,CAA8BC,UAA/C,EAA0D;AAACC,cAAAA,eAAe,EAAC;AAAjB,aAA1D,EACKC,IADL,CACU,YAAI;AACNP,cAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAV,cAAAA,GAAG,CAACiB,GAAJ,CAAQV,iBAAYW,mBAAZ,CAAgCC,KAAxC,EAA8C,UAACvB,GAAD,EAAKC,GAAL,EAAW;AACrDA,gBAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX;AACAvB,gBAAAA,GAAG,CAACwB,IAAJ,CAAS,iBAAe,OAAf,GACL,mCADK,GAC+B,OAD/B,GAEL,yCAFJ;AAIAxB,gBAAAA,GAAG,CAACyB,EAAJ;AACH,eAPD;AAQAtB,cAAAA,GAAG,CAACC,GAAJ,CAAQM,iBAAYW,mBAAZ,CAAgCK,MAAhC,CAAuCC,UAA/C,EAA0DC,kBAA1D;AACH,aAZL,WAYa,UAAAC,GAAG,EAAE;AACV1B,cAAAA,GAAG,CAACiB,GAAJ,CAAQV,iBAAYW,mBAAZ,CAAgCC,KAAxC,EAA8C,UAACvB,GAAD,EAAKC,GAAL,EAAW;AACrDA,gBAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB,EAA6B;AAAC,2BAAQK;AAAT,iBAA7B;AACA7B,gBAAAA,GAAG,CAAC8B,GAAJ;AACH,eAHD;AAIH,aAjBL;AAkBH,WArBD,CAsBA,OAAOD,GAAP,EAAY;AACR1B,YAAAA,GAAG,CAACiB,GAAJ,CAAQV,iBAAYqB,mBAAZ,CAAgCT,KAAxC,EAA8C,UAACvB,GAAD,EAAKC,GAAL,EAAW;AACrDA,cAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB,EAA6B;AAAC,yBAAQK;AAAT,eAA7B;AACA7B,cAAAA,GAAG,CAAC8B,GAAJ;AACH,aAHD;AAIH;;AA5B8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnC",
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyparser from 'body-parser';\r\nimport mongoose from 'mongoose';\r\nimport {ENVIRONMENT} from \"./ENV\";\r\nimport routesEvents from './routes/events.route';\r\nvar allowCrossDomain=function(req,res,next){\r\n    res.header('Access-Control-Allow-Origin',\"*\");\r\n    res.header('Access-Control-Allow-Methods','GET,POST,PUT,DELETE');\r\n    res.header('Access-Control-Allow-Headers','Content-Type');\r\n    next();\r\n};\r\nconst app=express().use(bodyparser.json());\r\napp.use(bodyparser.json());\r\napp.use(bodyparser.urlencoded({extended:false}));\r\napp.use(allowCrossDomain);\r\napp.listen(ENVIRONMENT.SERVER_PORT,async()=>{\r\n    try{\r\n        app.use(allowCrossDomain);\r\n        console.log(\"Express ejecutado correctamente\");\r\n        mongoose.connect(ENVIRONMENT.BD_URL_CONNECTION.DEVELOPING,{useNewUrlParser:true})\r\n            .then(()=>{\r\n                console.log('Successful connection to MongoDB');\r\n                app.get(ENVIRONMENT.ROUTES_MAIN_MODULES.INDEX,(req,res)=>{\r\n                    res.status(200);\r\n                    res.send(\"¡Hola Mundo!\"+\"</br>\"+\r\n                        \"¡Successful Connection to MongoDB\"+\"</br>\"+\r\n                        \"¡Server Web APIs - REST DEMO - ON LINE!\"\r\n                    );\r\n                    res.en();\r\n                });\r\n                app.use(ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.NAME_ROUTE,routesEvents);\r\n            }).catch(err=>{\r\n                app.get(ENVIRONMENT.ROUTES_MAIN_MODULES.INDEX,(req,res)=>{\r\n                    res.status(500).send('error',{'error':err});\r\n                    res.end();\r\n                });\r\n            });\r\n    }\r\n    catch (err) {\r\n        app.get(ENVIRONMENT.ROUTER_MAIN_MODULES.INDEX,(req,res)=>{\r\n            res.status(500).send('error',{'error':err});\r\n            res.end();\r\n        });\r\n    }\r\n});\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556589373870
  },
  "{\"sourceRoot\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"filename\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\\\\ENV.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\infra\\proyectos\\appdemorest",
      "filename": "C:\\infra\\proyectos\\appdemorest\\src\\ENV.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\infra\\proyectos\\appdemorest",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\infra\\proyectos\\appdemorest\\src\\ENV.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\infra\\proyectos\\appdemorest\\src\\ENV.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src",
        "sourceFileName": "ENV.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GET_DAY_WEEK_TEXT = exports.FORMATS_FOR_DATE_AND_TIME = exports.ENVIRONMENT = void 0;\nvar ENVIRONMENT = {\n  SERVER_PORT: process.env.PORT || 3001,\n  BD_URL_CONNECTION: {\n    TESTING: '',\n    DEVELOPING: 'mongodb+srv://brian:1234@cluster0-ovt1a.mongodb.net/test?retryWrites=true'\n  },\n  ROUTES_MAIN_MODULES: {\n    INDEX: '/',\n    EVENTS: {\n      NAME_ROUTE: '/api/events',\n      ACTIONS: {\n        GET_ZONES_LIST: '/getzoneslist',\n        POST_ZONE: '/postzone',\n        PUT_ZONE: '/putzone/:id',\n        DEL_ZONE: '/delzone/:id'\n      }\n    }\n  }\n};\nexports.ENVIRONMENT = ENVIRONMENT;\n\nvar FORMATS_FOR_DATE_AND_TIME = function FORMATS_FOR_DATE_AND_TIME() {\n  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n  return {\n    DATE_STANDART: date,\n    DATE_STRING: date.toDateString(),\n    DATE_ISO: date.toISOString(),\n    DATE_UTC: date.toUTCString(),\n    TIME_STANDART: date.toTimeString(),\n    DATE_TIME_SUBDOCUMENT: {\n      DATE: {\n        YEAR: date.getFullYear(),\n        MONTH: date.getMonth() + 1,\n        DAY: date.getDate()\n      },\n      TIME: {\n        HOUR: date.getHours(),\n        MINUTES: date.getMinutes(),\n        SECONDS: date.getSeconds()\n      }\n    },\n    DATE: {\n      YEAR: date.getFullYear(),\n      MONTH: date.getMonth() + 1,\n      DAY: date.getDate()\n    },\n    TIME: {\n      HOUR: date.getHours(),\n      MINUTES: date.getMinutes(),\n      SECONDS: date.getSeconds()\n    },\n    DAY_WEEK: {\n      NUMBER: date.getDate(),\n      TEXT: GET_DAY_WEEK_TEXT(date.getDay())\n    }\n  };\n};\n\nexports.FORMATS_FOR_DATE_AND_TIME = FORMATS_FOR_DATE_AND_TIME;\n\nvar GET_DAY_WEEK_TEXT = function GET_DAY_WEEK_TEXT(day) {\n  switch (day) {\n    case 1:\n      return \"LUNES\";\n\n    case 2:\n      return \"MARTES\";\n\n    case 3:\n      return \"MIERCOLES\";\n\n    case 4:\n      return \"JUEVES\";\n\n    case 5:\n      return \"VIERNES\";\n\n    case 6:\n      return \"SABADO\";\n\n    case 7:\n      return \"DOMINGO\";\n  }\n};\n\nexports.GET_DAY_WEEK_TEXT = GET_DAY_WEEK_TEXT;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVOVi5qcyJdLCJuYW1lcyI6WyJFTlZJUk9OTUVOVCIsIlNFUlZFUl9QT1JUIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJCRF9VUkxfQ09OTkVDVElPTiIsIlRFU1RJTkciLCJERVZFTE9QSU5HIiwiUk9VVEVTX01BSU5fTU9EVUxFUyIsIklOREVYIiwiRVZFTlRTIiwiTkFNRV9ST1VURSIsIkFDVElPTlMiLCJHRVRfWk9ORVNfTElTVCIsIlBPU1RfWk9ORSIsIlBVVF9aT05FIiwiREVMX1pPTkUiLCJGT1JNQVRTX0ZPUl9EQVRFX0FORF9USU1FIiwiZGF0ZSIsIkRhdGUiLCJEQVRFX1NUQU5EQVJUIiwiREFURV9TVFJJTkciLCJ0b0RhdGVTdHJpbmciLCJEQVRFX0lTTyIsInRvSVNPU3RyaW5nIiwiREFURV9VVEMiLCJ0b1VUQ1N0cmluZyIsIlRJTUVfU1RBTkRBUlQiLCJ0b1RpbWVTdHJpbmciLCJEQVRFX1RJTUVfU1VCRE9DVU1FTlQiLCJEQVRFIiwiWUVBUiIsImdldEZ1bGxZZWFyIiwiTU9OVEgiLCJnZXRNb250aCIsIkRBWSIsImdldERhdGUiLCJUSU1FIiwiSE9VUiIsImdldEhvdXJzIiwiTUlOVVRFUyIsImdldE1pbnV0ZXMiLCJTRUNPTkRTIiwiZ2V0U2Vjb25kcyIsIkRBWV9XRUVLIiwiTlVNQkVSIiwiVEVYVCIsIkdFVF9EQVlfV0VFS19URVhUIiwiZ2V0RGF5IiwiZGF5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSxXQUFXLEdBQUM7QUFDckJDLEVBQUFBLFdBQVcsRUFBQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBa0IsSUFEVDtBQUVyQkMsRUFBQUEsaUJBQWlCLEVBQUU7QUFDZkMsSUFBQUEsT0FBTyxFQUFDLEVBRE87QUFFZkMsSUFBQUEsVUFBVSxFQUFFO0FBRkcsR0FGRTtBQU1yQkMsRUFBQUEsbUJBQW1CLEVBQUM7QUFDaEJDLElBQUFBLEtBQUssRUFBQyxHQURVO0FBRWhCQyxJQUFBQSxNQUFNLEVBQ047QUFDSUMsTUFBQUEsVUFBVSxFQUFDLGFBRGY7QUFFSUMsTUFBQUEsT0FBTyxFQUNQO0FBQ0lDLFFBQUFBLGNBQWMsRUFBQyxlQURuQjtBQUVJQyxRQUFBQSxTQUFTLEVBQUMsV0FGZDtBQUdJQyxRQUFBQSxRQUFRLEVBQUMsY0FIYjtBQUlJQyxRQUFBQSxRQUFRLEVBQUM7QUFKYjtBQUhKO0FBSGdCO0FBTkMsQ0FBbEI7OztBQXFCQSxJQUFNQyx5QkFBeUIsR0FBQyxTQUExQkEseUJBQTBCLEdBQW1CO0FBQUEsTUFBbEJDLElBQWtCLHVFQUFiLElBQUlDLElBQUosRUFBYTtBQUN0RCxTQUFPO0FBQ0hDLElBQUFBLGFBQWEsRUFBQ0YsSUFEWDtBQUVIRyxJQUFBQSxXQUFXLEVBQUNILElBQUksQ0FBQ0ksWUFBTCxFQUZUO0FBR0hDLElBQUFBLFFBQVEsRUFBQ0wsSUFBSSxDQUFDTSxXQUFMLEVBSE47QUFJSEMsSUFBQUEsUUFBUSxFQUFDUCxJQUFJLENBQUNRLFdBQUwsRUFKTjtBQUtIQyxJQUFBQSxhQUFhLEVBQUNULElBQUksQ0FBQ1UsWUFBTCxFQUxYO0FBTUhDLElBQUFBLHFCQUFxQixFQUFDO0FBQ2xCQyxNQUFBQSxJQUFJLEVBQUM7QUFDREMsUUFBQUEsSUFBSSxFQUFDYixJQUFJLENBQUNjLFdBQUwsRUFESjtBQUVEQyxRQUFBQSxLQUFLLEVBQUNmLElBQUksQ0FBQ2dCLFFBQUwsS0FBZ0IsQ0FGckI7QUFHREMsUUFBQUEsR0FBRyxFQUFDakIsSUFBSSxDQUFDa0IsT0FBTDtBQUhILE9BRGE7QUFNbEJDLE1BQUFBLElBQUksRUFBQztBQUNEQyxRQUFBQSxJQUFJLEVBQUNwQixJQUFJLENBQUNxQixRQUFMLEVBREo7QUFFREMsUUFBQUEsT0FBTyxFQUFDdEIsSUFBSSxDQUFDdUIsVUFBTCxFQUZQO0FBR0RDLFFBQUFBLE9BQU8sRUFBQ3hCLElBQUksQ0FBQ3lCLFVBQUw7QUFIUDtBQU5hLEtBTm5CO0FBa0JIYixJQUFBQSxJQUFJLEVBQUM7QUFDREMsTUFBQUEsSUFBSSxFQUFDYixJQUFJLENBQUNjLFdBQUwsRUFESjtBQUVEQyxNQUFBQSxLQUFLLEVBQUNmLElBQUksQ0FBQ2dCLFFBQUwsS0FBZ0IsQ0FGckI7QUFHREMsTUFBQUEsR0FBRyxFQUFDakIsSUFBSSxDQUFDa0IsT0FBTDtBQUhILEtBbEJGO0FBdUJIQyxJQUFBQSxJQUFJLEVBQUM7QUFDREMsTUFBQUEsSUFBSSxFQUFDcEIsSUFBSSxDQUFDcUIsUUFBTCxFQURKO0FBRURDLE1BQUFBLE9BQU8sRUFBQ3RCLElBQUksQ0FBQ3VCLFVBQUwsRUFGUDtBQUdEQyxNQUFBQSxPQUFPLEVBQUN4QixJQUFJLENBQUN5QixVQUFMO0FBSFAsS0F2QkY7QUE0QkhDLElBQUFBLFFBQVEsRUFBQztBQUNMQyxNQUFBQSxNQUFNLEVBQUMzQixJQUFJLENBQUNrQixPQUFMLEVBREY7QUFFTFUsTUFBQUEsSUFBSSxFQUFDQyxpQkFBaUIsQ0FBQzdCLElBQUksQ0FBQzhCLE1BQUwsRUFBRDtBQUZqQjtBQTVCTixHQUFQO0FBaUNILENBbENNOzs7O0FBbUNBLElBQU1ELGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsQ0FBQ0UsR0FBRCxFQUFRO0FBQ3JDLFVBQU9BLEdBQVA7QUFDSSxTQUFLLENBQUw7QUFDSSxhQUFPLE9BQVA7O0FBQ0osU0FBSyxDQUFMO0FBQ0ksYUFBTyxRQUFQOztBQUNKLFNBQUssQ0FBTDtBQUNJLGFBQU8sV0FBUDs7QUFDSixTQUFLLENBQUw7QUFDSSxhQUFPLFFBQVA7O0FBQ0osU0FBSyxDQUFMO0FBQ0ksYUFBTyxTQUFQOztBQUNKLFNBQUssQ0FBTDtBQUNJLGFBQU8sUUFBUDs7QUFDSixTQUFLLENBQUw7QUFDSSxhQUFPLFNBQVA7QUFkUjtBQWdCSCxDQWpCTSIsInNvdXJjZVJvb3QiOiJDOlxcaW5mcmFcXHByb3llY3Rvc1xcYXBwZGVtb3Jlc3RcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBFTlZJUk9OTUVOVD17XHJcbiAgICBTRVJWRVJfUE9SVDpwcm9jZXNzLmVudi5QT1JUfHwzMDAxLFxyXG4gICAgQkRfVVJMX0NPTk5FQ1RJT046IHtcclxuICAgICAgICBURVNUSU5HOicnLFxyXG4gICAgICAgIERFVkVMT1BJTkc6ICdtb25nb2RiK3NydjovL2JyaWFuOjEyMzRAY2x1c3RlcjAtb3Z0MWEubW9uZ29kYi5uZXQvdGVzdD9yZXRyeVdyaXRlcz10cnVlJyxcclxuICAgIH0sXHJcbiAgICBST1VURVNfTUFJTl9NT0RVTEVTOntcclxuICAgICAgICBJTkRFWDonLycsXHJcbiAgICAgICAgRVZFTlRTOlxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgTkFNRV9ST1VURTonL2FwaS9ldmVudHMnLFxyXG4gICAgICAgICAgICBBQ1RJT05TOlxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBHRVRfWk9ORVNfTElTVDonL2dldHpvbmVzbGlzdCcsXHJcbiAgICAgICAgICAgICAgICBQT1NUX1pPTkU6Jy9wb3N0em9uZScsXHJcbiAgICAgICAgICAgICAgICBQVVRfWk9ORTonL3B1dHpvbmUvOmlkJyxcclxuICAgICAgICAgICAgICAgIERFTF9aT05FOicvZGVsem9uZS86aWQnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcbmV4cG9ydCBjb25zdCBGT1JNQVRTX0ZPUl9EQVRFX0FORF9USU1FPShkYXRlPW5ldyBEYXRlKCkpPT57XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIERBVEVfU1RBTkRBUlQ6ZGF0ZSxcclxuICAgICAgICBEQVRFX1NUUklORzpkYXRlLnRvRGF0ZVN0cmluZygpLFxyXG4gICAgICAgIERBVEVfSVNPOmRhdGUudG9JU09TdHJpbmcoKSxcclxuICAgICAgICBEQVRFX1VUQzpkYXRlLnRvVVRDU3RyaW5nKCksXHJcbiAgICAgICAgVElNRV9TVEFOREFSVDpkYXRlLnRvVGltZVN0cmluZygpLFxyXG4gICAgICAgIERBVEVfVElNRV9TVUJET0NVTUVOVDp7XHJcbiAgICAgICAgICAgIERBVEU6e1xyXG4gICAgICAgICAgICAgICAgWUVBUjpkYXRlLmdldEZ1bGxZZWFyKCksXHJcbiAgICAgICAgICAgICAgICBNT05USDpkYXRlLmdldE1vbnRoKCkrMSxcclxuICAgICAgICAgICAgICAgIERBWTpkYXRlLmdldERhdGUoKVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBUSU1FOntcclxuICAgICAgICAgICAgICAgIEhPVVI6ZGF0ZS5nZXRIb3VycygpLFxyXG4gICAgICAgICAgICAgICAgTUlOVVRFUzpkYXRlLmdldE1pbnV0ZXMoKSxcclxuICAgICAgICAgICAgICAgIFNFQ09ORFM6ZGF0ZS5nZXRTZWNvbmRzKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgREFURTp7XHJcbiAgICAgICAgICAgIFlFQVI6ZGF0ZS5nZXRGdWxsWWVhcigpLFxyXG4gICAgICAgICAgICBNT05USDpkYXRlLmdldE1vbnRoKCkrMSxcclxuICAgICAgICAgICAgREFZOmRhdGUuZ2V0RGF0ZSgpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBUSU1FOntcclxuICAgICAgICAgICAgSE9VUjpkYXRlLmdldEhvdXJzKCksXHJcbiAgICAgICAgICAgIE1JTlVURVM6ZGF0ZS5nZXRNaW51dGVzKCksXHJcbiAgICAgICAgICAgIFNFQ09ORFM6ZGF0ZS5nZXRTZWNvbmRzKClcclxuICAgICAgICB9LFxyXG4gICAgICAgIERBWV9XRUVLOntcclxuICAgICAgICAgICAgTlVNQkVSOmRhdGUuZ2V0RGF0ZSgpLFxyXG4gICAgICAgICAgICBURVhUOkdFVF9EQVlfV0VFS19URVhUKGRhdGUuZ2V0RGF5KCkpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5leHBvcnQgY29uc3QgR0VUX0RBWV9XRUVLX1RFWFQgPSAoZGF5KSA9PntcclxuICAgIHN3aXRjaChkYXkpe1xyXG4gICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgcmV0dXJuIFwiTFVORVNcIjtcclxuICAgICAgICBjYXNlIDI6XHJcbiAgICAgICAgICAgIHJldHVybiBcIk1BUlRFU1wiO1xyXG4gICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgcmV0dXJuIFwiTUlFUkNPTEVTXCI7XHJcbiAgICAgICAgY2FzZSA0OlxyXG4gICAgICAgICAgICByZXR1cm4gXCJKVUVWRVNcIjtcclxuICAgICAgICBjYXNlIDU6XHJcbiAgICAgICAgICAgIHJldHVybiBcIlZJRVJORVNcIjtcclxuICAgICAgICBjYXNlIDY6XHJcbiAgICAgICAgICAgIHJldHVybiBcIlNBQkFET1wiO1xyXG4gICAgICAgIGNhc2UgNzpcclxuICAgICAgICAgICAgcmV0dXJuIFwiRE9NSU5HT1wiO1xyXG4gICAgfVxyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ENV.js"
      ],
      "names": [
        "ENVIRONMENT",
        "SERVER_PORT",
        "process",
        "env",
        "PORT",
        "BD_URL_CONNECTION",
        "TESTING",
        "DEVELOPING",
        "ROUTES_MAIN_MODULES",
        "INDEX",
        "EVENTS",
        "NAME_ROUTE",
        "ACTIONS",
        "GET_ZONES_LIST",
        "POST_ZONE",
        "PUT_ZONE",
        "DEL_ZONE",
        "FORMATS_FOR_DATE_AND_TIME",
        "date",
        "Date",
        "DATE_STANDART",
        "DATE_STRING",
        "toDateString",
        "DATE_ISO",
        "toISOString",
        "DATE_UTC",
        "toUTCString",
        "TIME_STANDART",
        "toTimeString",
        "DATE_TIME_SUBDOCUMENT",
        "DATE",
        "YEAR",
        "getFullYear",
        "MONTH",
        "getMonth",
        "DAY",
        "getDate",
        "TIME",
        "HOUR",
        "getHours",
        "MINUTES",
        "getMinutes",
        "SECONDS",
        "getSeconds",
        "DAY_WEEK",
        "NUMBER",
        "TEXT",
        "GET_DAY_WEEK_TEXT",
        "getDay",
        "day"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,WAAW,GAAC;AACrBC,EAAAA,WAAW,EAACC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAkB,IADT;AAErBC,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,OAAO,EAAC,EADO;AAEfC,IAAAA,UAAU,EAAE;AAFG,GAFE;AAMrBC,EAAAA,mBAAmB,EAAC;AAChBC,IAAAA,KAAK,EAAC,GADU;AAEhBC,IAAAA,MAAM,EACN;AACIC,MAAAA,UAAU,EAAC,aADf;AAEIC,MAAAA,OAAO,EACP;AACIC,QAAAA,cAAc,EAAC,eADnB;AAEIC,QAAAA,SAAS,EAAC,WAFd;AAGIC,QAAAA,QAAQ,EAAC,cAHb;AAIIC,QAAAA,QAAQ,EAAC;AAJb;AAHJ;AAHgB;AANC,CAAlB;;;AAqBA,IAAMC,yBAAyB,GAAC,SAA1BA,yBAA0B,GAAmB;AAAA,MAAlBC,IAAkB,uEAAb,IAAIC,IAAJ,EAAa;AACtD,SAAO;AACHC,IAAAA,aAAa,EAACF,IADX;AAEHG,IAAAA,WAAW,EAACH,IAAI,CAACI,YAAL,EAFT;AAGHC,IAAAA,QAAQ,EAACL,IAAI,CAACM,WAAL,EAHN;AAIHC,IAAAA,QAAQ,EAACP,IAAI,CAACQ,WAAL,EAJN;AAKHC,IAAAA,aAAa,EAACT,IAAI,CAACU,YAAL,EALX;AAMHC,IAAAA,qBAAqB,EAAC;AAClBC,MAAAA,IAAI,EAAC;AACDC,QAAAA,IAAI,EAACb,IAAI,CAACc,WAAL,EADJ;AAEDC,QAAAA,KAAK,EAACf,IAAI,CAACgB,QAAL,KAAgB,CAFrB;AAGDC,QAAAA,GAAG,EAACjB,IAAI,CAACkB,OAAL;AAHH,OADa;AAMlBC,MAAAA,IAAI,EAAC;AACDC,QAAAA,IAAI,EAACpB,IAAI,CAACqB,QAAL,EADJ;AAEDC,QAAAA,OAAO,EAACtB,IAAI,CAACuB,UAAL,EAFP;AAGDC,QAAAA,OAAO,EAACxB,IAAI,CAACyB,UAAL;AAHP;AANa,KANnB;AAkBHb,IAAAA,IAAI,EAAC;AACDC,MAAAA,IAAI,EAACb,IAAI,CAACc,WAAL,EADJ;AAEDC,MAAAA,KAAK,EAACf,IAAI,CAACgB,QAAL,KAAgB,CAFrB;AAGDC,MAAAA,GAAG,EAACjB,IAAI,CAACkB,OAAL;AAHH,KAlBF;AAuBHC,IAAAA,IAAI,EAAC;AACDC,MAAAA,IAAI,EAACpB,IAAI,CAACqB,QAAL,EADJ;AAEDC,MAAAA,OAAO,EAACtB,IAAI,CAACuB,UAAL,EAFP;AAGDC,MAAAA,OAAO,EAACxB,IAAI,CAACyB,UAAL;AAHP,KAvBF;AA4BHC,IAAAA,QAAQ,EAAC;AACLC,MAAAA,MAAM,EAAC3B,IAAI,CAACkB,OAAL,EADF;AAELU,MAAAA,IAAI,EAACC,iBAAiB,CAAC7B,IAAI,CAAC8B,MAAL,EAAD;AAFjB;AA5BN,GAAP;AAiCH,CAlCM;;;;AAmCA,IAAMD,iBAAiB,GAAG,SAApBA,iBAAoB,CAACE,GAAD,EAAQ;AACrC,UAAOA,GAAP;AACI,SAAK,CAAL;AACI,aAAO,OAAP;;AACJ,SAAK,CAAL;AACI,aAAO,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,WAAP;;AACJ,SAAK,CAAL;AACI,aAAO,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,SAAP;;AACJ,SAAK,CAAL;AACI,aAAO,QAAP;;AACJ,SAAK,CAAL;AACI,aAAO,SAAP;AAdR;AAgBH,CAjBM",
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src",
      "sourcesContent": [
        "export const ENVIRONMENT={\r\n    SERVER_PORT:process.env.PORT||3001,\r\n    BD_URL_CONNECTION: {\r\n        TESTING:'',\r\n        DEVELOPING: 'mongodb+srv://brian:1234@cluster0-ovt1a.mongodb.net/test?retryWrites=true',\r\n    },\r\n    ROUTES_MAIN_MODULES:{\r\n        INDEX:'/',\r\n        EVENTS:\r\n        {\r\n            NAME_ROUTE:'/api/events',\r\n            ACTIONS:\r\n            {\r\n                GET_ZONES_LIST:'/getzoneslist',\r\n                POST_ZONE:'/postzone',\r\n                PUT_ZONE:'/putzone/:id',\r\n                DEL_ZONE:'/delzone/:id'\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const FORMATS_FOR_DATE_AND_TIME=(date=new Date())=>{\r\n    return {\r\n        DATE_STANDART:date,\r\n        DATE_STRING:date.toDateString(),\r\n        DATE_ISO:date.toISOString(),\r\n        DATE_UTC:date.toUTCString(),\r\n        TIME_STANDART:date.toTimeString(),\r\n        DATE_TIME_SUBDOCUMENT:{\r\n            DATE:{\r\n                YEAR:date.getFullYear(),\r\n                MONTH:date.getMonth()+1,\r\n                DAY:date.getDate()\r\n            },\r\n            TIME:{\r\n                HOUR:date.getHours(),\r\n                MINUTES:date.getMinutes(),\r\n                SECONDS:date.getSeconds()\r\n            }\r\n        },\r\n        DATE:{\r\n            YEAR:date.getFullYear(),\r\n            MONTH:date.getMonth()+1,\r\n            DAY:date.getDate()\r\n        },\r\n        TIME:{\r\n            HOUR:date.getHours(),\r\n            MINUTES:date.getMinutes(),\r\n            SECONDS:date.getSeconds()\r\n        },\r\n        DAY_WEEK:{\r\n            NUMBER:date.getDate(),\r\n            TEXT:GET_DAY_WEEK_TEXT(date.getDay())\r\n        }\r\n    }\r\n};\r\nexport const GET_DAY_WEEK_TEXT = (day) =>{\r\n    switch(day){\r\n        case 1:\r\n            return \"LUNES\";\r\n        case 2:\r\n            return \"MARTES\";\r\n        case 3:\r\n            return \"MIERCOLES\";\r\n        case 4:\r\n            return \"JUEVES\";\r\n        case 5:\r\n            return \"VIERNES\";\r\n        case 6:\r\n            return \"SABADO\";\r\n        case 7:\r\n            return \"DOMINGO\";\r\n    }\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556677698003
  },
  "{\"sourceRoot\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"filename\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\\\\routes\\\\events.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\infra\\proyectos\\appdemorest",
      "filename": "C:\\infra\\proyectos\\appdemorest\\src\\routes\\events.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\infra\\proyectos\\appdemorest",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\infra\\proyectos\\appdemorest\\src\\routes\\events.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\infra\\proyectos\\appdemorest\\src\\routes\\events.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\routes",
        "sourceFileName": "events.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _ENV = require(\"../ENV\");\n\nvar _events = require(\"../controllers/events.controller\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nrouter.get(_ENV.ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.ACTIONS.GET_ZONES_LIST, _events.GetZonesList);\nrouter.post(_ENV.ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.ACTIONS.POST_ZONE, _events.PostZone);\nrouter.put(_ENV.ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.ACTIONS.PUT_ZONE, _events.PutZone);\nrouter[\"delete\"](_ENV.ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.ACTIONS.DEL_ZONE, _events.DelZone);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0IiwiRU5WSVJPTk1FTlQiLCJST1VURVNfTUFJTl9NT0RVTEVTIiwiRVZFTlRTIiwiQUNUSU9OUyIsIkdFVF9aT05FU19MSVNUIiwiR2V0Wm9uZXNMaXN0IiwicG9zdCIsIlBPU1RfWk9ORSIsIlBvc3Rab25lIiwicHV0IiwiUFVUX1pPTkUiLCJQdXRab25lIiwiREVMX1pPTkUiLCJEZWxab25lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFFQTs7OztBQVFBLElBQU1BLE1BQU0sR0FBQ0Msb0JBQVFDLE1BQVIsRUFBYjs7QUFDQUYsTUFBTSxDQUFDRyxHQUFQLENBQVdDLGlCQUFZQyxtQkFBWixDQUFnQ0MsTUFBaEMsQ0FBdUNDLE9BQXZDLENBQStDQyxjQUExRCxFQUF5RUMsb0JBQXpFO0FBQ0FULE1BQU0sQ0FBQ1UsSUFBUCxDQUFZTixpQkFBWUMsbUJBQVosQ0FBZ0NDLE1BQWhDLENBQXVDQyxPQUF2QyxDQUErQ0ksU0FBM0QsRUFBcUVDLGdCQUFyRTtBQUNBWixNQUFNLENBQUNhLEdBQVAsQ0FBV1QsaUJBQVlDLG1CQUFaLENBQWdDQyxNQUFoQyxDQUF1Q0MsT0FBdkMsQ0FBK0NPLFFBQTFELEVBQW1FQyxlQUFuRTtBQUNBZixNQUFNLFVBQU4sQ0FBY0ksaUJBQVlDLG1CQUFaLENBQWdDQyxNQUFoQyxDQUF1Q0MsT0FBdkMsQ0FBK0NTLFFBQTdELEVBQXNFQyxlQUF0RTtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBZW5CLE1BQWYiLCJzb3VyY2VSb290IjoiQzpcXGluZnJhXFxwcm95ZWN0b3NcXGFwcGRlbW9yZXN0XFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQge0VOVklST05NRU5UfSBmcm9tIFwiLi4vRU5WXCI7XHJcblxyXG5pbXBvcnRcclxue1xyXG4gICAgR2V0Wm9uZXNMaXN0LFxyXG4gICAgUG9zdFpvbmUsXHJcbiAgICBQdXRab25lLFxyXG4gICAgRGVsWm9uZVxyXG59IGZyb20gJy4uL2NvbnRyb2xsZXJzL2V2ZW50cy5jb250cm9sbGVyJztcclxuXHJcbmNvbnN0IHJvdXRlcj1leHByZXNzLlJvdXRlcigpO1xyXG5yb3V0ZXIuZ2V0KEVOVklST05NRU5ULlJPVVRFU19NQUlOX01PRFVMRVMuRVZFTlRTLkFDVElPTlMuR0VUX1pPTkVTX0xJU1QsR2V0Wm9uZXNMaXN0KTtcclxucm91dGVyLnBvc3QoRU5WSVJPTk1FTlQuUk9VVEVTX01BSU5fTU9EVUxFUy5FVkVOVFMuQUNUSU9OUy5QT1NUX1pPTkUsUG9zdFpvbmUpO1xyXG5yb3V0ZXIucHV0KEVOVklST05NRU5ULlJPVVRFU19NQUlOX01PRFVMRVMuRVZFTlRTLkFDVElPTlMuUFVUX1pPTkUsUHV0Wm9uZSk7XHJcbnJvdXRlci5kZWxldGUoRU5WSVJPTk1FTlQuUk9VVEVTX01BSU5fTU9EVUxFUy5FVkVOVFMuQUNUSU9OUy5ERUxfWk9ORSxEZWxab25lKTtcclxubW9kdWxlLmV4cG9ydHM9cm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "events.route.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "get",
        "ENVIRONMENT",
        "ROUTES_MAIN_MODULES",
        "EVENTS",
        "ACTIONS",
        "GET_ZONES_LIST",
        "GetZonesList",
        "post",
        "POST_ZONE",
        "PostZone",
        "put",
        "PUT_ZONE",
        "PutZone",
        "DEL_ZONE",
        "DelZone",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AAEA;;;;AAQA,IAAMA,MAAM,GAACC,oBAAQC,MAAR,EAAb;;AACAF,MAAM,CAACG,GAAP,CAAWC,iBAAYC,mBAAZ,CAAgCC,MAAhC,CAAuCC,OAAvC,CAA+CC,cAA1D,EAAyEC,oBAAzE;AACAT,MAAM,CAACU,IAAP,CAAYN,iBAAYC,mBAAZ,CAAgCC,MAAhC,CAAuCC,OAAvC,CAA+CI,SAA3D,EAAqEC,gBAArE;AACAZ,MAAM,CAACa,GAAP,CAAWT,iBAAYC,mBAAZ,CAAgCC,MAAhC,CAAuCC,OAAvC,CAA+CO,QAA1D,EAAmEC,eAAnE;AACAf,MAAM,UAAN,CAAcI,iBAAYC,mBAAZ,CAAgCC,MAAhC,CAAuCC,OAAvC,CAA+CS,QAA7D,EAAsEC,eAAtE;AACAC,MAAM,CAACC,OAAP,GAAenB,MAAf",
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\r\nimport {ENVIRONMENT} from \"../ENV\";\r\n\r\nimport\r\n{\r\n    GetZonesList,\r\n    PostZone,\r\n    PutZone,\r\n    DelZone\r\n} from '../controllers/events.controller';\r\n\r\nconst router=express.Router();\r\nrouter.get(ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.ACTIONS.GET_ZONES_LIST,GetZonesList);\r\nrouter.post(ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.ACTIONS.POST_ZONE,PostZone);\r\nrouter.put(ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.ACTIONS.PUT_ZONE,PutZone);\r\nrouter.delete(ENVIRONMENT.ROUTES_MAIN_MODULES.EVENTS.ACTIONS.DEL_ZONE,DelZone);\r\nmodule.exports=router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1556674267565
  },
  "{\"sourceRoot\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"filename\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\\\\controllers\\\\events.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\infra\\proyectos\\appdemorest",
      "filename": "C:\\infra\\proyectos\\appdemorest\\src\\controllers\\events.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\infra\\proyectos\\appdemorest",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\infra\\proyectos\\appdemorest\\src\\controllers\\events.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\infra\\proyectos\\appdemorest\\src\\controllers\\events.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\controllers",
        "sourceFileName": "events.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _ENV = require(\"../ENV\");\n\nvar _cat_zonas = _interopRequireDefault(require(\"../models/cat_zonas.model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nexports.GetZonesList =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _cat_zonas[\"default\"].find().then(function (data) {\n              return data.length == 0 || data != null ? res.status(200).json(data) : res.status(404).send(\"No se encontraron Zonas\");\n            })[\"catch\"](function (err) {\n              return res.status(500).send(err);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.PostZone =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var idzona;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            idzona = req.body;\n            _context2.next = 3;\n            return _cat_zonas[\"default\"].create(idzona).then(function (data) {\n              return data.length == 0 || data != null ? res.status(200).json(data) : res.status(404).send(\"No se encontraron Zonas\");\n            })[\"catch\"](function (err) {\n              return res.status(500).send(err);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.PutZone =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var idzona, descripcion;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            idzona = req.params.id;\n            descripcion = req.body.descZona;\n            _context3.next = 4;\n            return _cat_zonas[\"default\"].updateOne({\n              IdZona: idzona\n            }, {\n              $set: {\n                DesZona: descripcion,\n                FechaUltMod: (0, _ENV.FORMATS_FOR_DATE_AND_TIME)().DATE_UTC,\n                UsuarioMod: 'BRIAN'\n              }\n            }).then(function (data) {\n              return data.length == 0 || data != null ? res.status(200).json(data) : res.status(404).send(\"No se encontraron Zonas\");\n            })[\"catch\"](function (err) {\n              return res.status(500).send(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.DelZone =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var idzona;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            idzona = req.params.id;\n            _context4.next = 3;\n            return _cat_zonas[\"default\"].deleteOne({\n              IdZona: idzona\n            }).then(function (data) {\n              return data.length == 0 || data != null ? res.status(200).json(data) : res.status(404).send(\"No se encontraron Zonas\");\n            })[\"catch\"](function (err) {\n              return res.status(500).send(err);\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJHZXRab25lc0xpc3QiLCJyZXEiLCJyZXMiLCJDYXRfem9uYXMiLCJmaW5kIiwidGhlbiIsImRhdGEiLCJsZW5ndGgiLCJzdGF0dXMiLCJqc29uIiwic2VuZCIsImVyciIsIlBvc3Rab25lIiwiaWR6b25hIiwiYm9keSIsImNyZWF0ZSIsIlB1dFpvbmUiLCJwYXJhbXMiLCJpZCIsImRlc2NyaXBjaW9uIiwiZGVzY1pvbmEiLCJ1cGRhdGVPbmUiLCJJZFpvbmEiLCIkc2V0IiwiRGVzWm9uYSIsIkZlY2hhVWx0TW9kIiwiREFURV9VVEMiLCJVc3VhcmlvTW9kIiwiRGVsWm9uZSIsImRlbGV0ZU9uZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQUEsT0FBTyxDQUFDQyxZQUFSO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBcUIsaUJBQU9DLEdBQVAsRUFBV0MsR0FBWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDWEMsc0JBQVVDLElBQVYsR0FDREMsSUFEQyxDQUVELFVBQUFDLElBQUksRUFDRDtBQUNJLHFCQUFRQSxJQUFJLENBQUNDLE1BQUwsSUFBYSxDQUFiLElBQWdCRCxJQUFJLElBQUUsSUFBdkIsR0FBNkJKLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSCxJQUFyQixDQUE3QixHQUNFSixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCRSxJQUFoQixDQUFxQix5QkFBckIsQ0FEVDtBQUVILGFBTkgsV0FTRCxVQUFBQyxHQUFHLEVBQ0E7QUFDSSxxQkFBT1QsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkUsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFDSCxhQVpILENBRFc7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBckI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBaUJBWixPQUFPLENBQUNhLFFBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFpQixrQkFBT1gsR0FBUCxFQUFXQyxHQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNQVyxZQUFBQSxNQURPLEdBQ0VaLEdBQUcsQ0FBQ2EsSUFETjtBQUFBO0FBQUEsbUJBRVBYLHNCQUFVWSxNQUFWLENBQWlCRixNQUFqQixFQUNEUixJQURDLENBRUQsVUFBQUMsSUFBSSxFQUNEO0FBQ0kscUJBQVFBLElBQUksQ0FBQ0MsTUFBTCxJQUFhLENBQWIsSUFBZ0JELElBQUksSUFBRSxJQUF2QixHQUE2QkosR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJILElBQXJCLENBQTdCLEdBQ0ZKLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JFLElBQWhCLENBQXFCLHlCQUFyQixDQURMO0FBRUgsYUFOSCxXQVNELFVBQUFDLEdBQUcsRUFDQTtBQUNJLHFCQUFPVCxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCRSxJQUFoQixDQUFxQkMsR0FBckIsQ0FBUDtBQUNILGFBWkgsQ0FGTzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFrQkFaLE9BQU8sQ0FBQ2lCLE9BQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFnQixrQkFBT2YsR0FBUCxFQUFXQyxHQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNOVyxZQUFBQSxNQURNLEdBQ0NaLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV0MsRUFEWjtBQUVOQyxZQUFBQSxXQUZNLEdBRU1sQixHQUFHLENBQUNhLElBQUosQ0FBU00sUUFGZjtBQUFBO0FBQUEsbUJBR05qQixzQkFBVWtCLFNBQVYsQ0FBb0I7QUFBQ0MsY0FBQUEsTUFBTSxFQUFDVDtBQUFSLGFBQXBCLEVBQW9DO0FBQUNVLGNBQUFBLElBQUksRUFBQztBQUFDQyxnQkFBQUEsT0FBTyxFQUFDTCxXQUFUO0FBQXFCTSxnQkFBQUEsV0FBVyxFQUFDLHNDQUE0QkMsUUFBN0Q7QUFBc0VDLGdCQUFBQSxVQUFVLEVBQUM7QUFBakY7QUFBTixhQUFwQyxFQUNEdEIsSUFEQyxDQUVELFVBQUFDLElBQUksRUFDRDtBQUNJLHFCQUFRQSxJQUFJLENBQUNDLE1BQUwsSUFBYSxDQUFiLElBQWdCRCxJQUFJLElBQUUsSUFBdkIsR0FBNkJKLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCSCxJQUFyQixDQUE3QixHQUNGSixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCRSxJQUFoQixDQUFxQix5QkFBckIsQ0FETDtBQUVILGFBTkgsV0FTRCxVQUFBQyxHQUFHLEVBQ0E7QUFDSSxxQkFBT1QsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkUsSUFBaEIsQ0FBcUJDLEdBQXJCLENBQVA7QUFDSCxhQVpILENBSE07O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBaEI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBbUJBWixPQUFPLENBQUM2QixPQUFSO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBZ0Isa0JBQU8zQixHQUFQLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ05XLFlBQUFBLE1BRE0sR0FDR1osR0FBRyxDQUFDZ0IsTUFBSixDQUFXQyxFQURkO0FBQUE7QUFBQSxtQkFFTmYsc0JBQVUwQixTQUFWLENBQW9CO0FBQUNQLGNBQUFBLE1BQU0sRUFBQ1Q7QUFBUixhQUFwQixFQUNEUixJQURDLENBRUQsVUFBQUMsSUFBSSxFQUNEO0FBQ0kscUJBQVFBLElBQUksQ0FBQ0MsTUFBTCxJQUFhLENBQWIsSUFBZ0JELElBQUksSUFBRSxJQUF2QixHQUE2QkosR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJILElBQXJCLENBQTdCLEdBQ0VKLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JFLElBQWhCLENBQXFCLHlCQUFyQixDQURUO0FBRUgsYUFOSCxXQVNELFVBQUFDLEdBQUcsRUFDQTtBQUNJLHFCQUFPVCxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCRSxJQUFoQixDQUFxQkMsR0FBckIsQ0FBUDtBQUNILGFBWkgsQ0FGTTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFoQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiJDOlxcaW5mcmFcXHByb3llY3Rvc1xcYXBwZGVtb3Jlc3RcXHNyY1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ZPUk1BVFNfRk9SX0RBVEVfQU5EX1RJTUV9IGZyb20gXCIuLi9FTlZcIjtcclxuaW1wb3J0IENhdF96b25hcyBmcm9tICcuLi9tb2RlbHMvY2F0X3pvbmFzLm1vZGVsJztcclxuXHJcbmV4cG9ydHMuR2V0Wm9uZXNMaXN0PWFzeW5jIChyZXEscmVzKT0+e1xyXG4gICAgYXdhaXQgQ2F0X3pvbmFzLmZpbmQoKVxyXG4gICAgICAgIC50aGVuXHJcbiAgICAgICAgKGRhdGE9PlxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKGRhdGEubGVuZ3RoPT0wfHxkYXRhIT1udWxsKT9yZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA6cmVzLnN0YXR1cyg0MDQpLnNlbmQoXCJObyBzZSBlbmNvbnRyYXJvbiBab25hc1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIClcclxuICAgICAgICAuY2F0Y2hcclxuICAgICAgICAoZXJyID0+XHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuc2VuZChlcnIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgKVxyXG59O1xyXG5cclxuZXhwb3J0cy5Qb3N0Wm9uZT1hc3luYyAocmVxLHJlcyk9PntcclxuICAgIGNvbnN0IGlkem9uYSA9IHJlcS5ib2R5O1xyXG4gICAgYXdhaXQgQ2F0X3pvbmFzLmNyZWF0ZShpZHpvbmEpXHJcbiAgICAgICAgLnRoZW5cclxuICAgICAgICAoZGF0YT0+XHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAoZGF0YS5sZW5ndGg9PTB8fGRhdGEhPW51bGwpP3Jlcy5zdGF0dXMoMjAwKS5qc29uKGRhdGEpXHJcbiAgICAgICAgICAgICAgICAgICAgOnJlcy5zdGF0dXMoNDA0KS5zZW5kKFwiTm8gc2UgZW5jb250cmFyb24gWm9uYXNcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICApXHJcbiAgICAgICAgLmNhdGNoXHJcbiAgICAgICAgKGVyciA9PlxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIClcclxufTtcclxuXHJcbmV4cG9ydHMuUHV0Wm9uZT1hc3luYyAocmVxLHJlcyk9PntcclxuICAgIGNvbnN0IGlkem9uYT1yZXEucGFyYW1zLmlkO1xyXG4gICAgY29uc3QgZGVzY3JpcGNpb249cmVxLmJvZHkuZGVzY1pvbmE7XHJcbiAgICBhd2FpdCBDYXRfem9uYXMudXBkYXRlT25lKHtJZFpvbmE6aWR6b25hfSx7JHNldDp7RGVzWm9uYTpkZXNjcmlwY2lvbixGZWNoYVVsdE1vZDpGT1JNQVRTX0ZPUl9EQVRFX0FORF9USU1FKCkuREFURV9VVEMsVXN1YXJpb01vZDonQlJJQU4nfX0pXHJcbiAgICAgICAgLnRoZW5cclxuICAgICAgICAoZGF0YT0+XHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAoZGF0YS5sZW5ndGg9PTB8fGRhdGEhPW51bGwpP3Jlcy5zdGF0dXMoMjAwKS5qc29uKGRhdGEpXHJcbiAgICAgICAgICAgICAgICAgICAgOnJlcy5zdGF0dXMoNDA0KS5zZW5kKFwiTm8gc2UgZW5jb250cmFyb24gWm9uYXNcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICApXHJcbiAgICAgICAgLmNhdGNoXHJcbiAgICAgICAgKGVyciA9PlxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIClcclxufTtcclxuXHJcbmV4cG9ydHMuRGVsWm9uZT1hc3luYyAocmVxLHJlcyk9PntcclxuICAgIGNvbnN0IGlkem9uYSA9IHJlcS5wYXJhbXMuaWQ7XHJcbiAgICBhd2FpdCBDYXRfem9uYXMuZGVsZXRlT25lKHtJZFpvbmE6aWR6b25hfSlcclxuICAgICAgICAudGhlblxyXG4gICAgICAgIChkYXRhPT5cclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChkYXRhLmxlbmd0aD09MHx8ZGF0YSE9bnVsbCk/cmVzLnN0YXR1cygyMDApLmpzb24oZGF0YSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgOnJlcy5zdGF0dXMoNDA0KS5zZW5kKFwiTm8gc2UgZW5jb250cmFyb24gWm9uYXNcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICApXHJcbiAgICAgICAgLmNhdGNoXHJcbiAgICAgICAgKGVyciA9PlxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIClcclxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "events.controller.js"
      ],
      "names": [
        "exports",
        "GetZonesList",
        "req",
        "res",
        "Cat_zonas",
        "find",
        "then",
        "data",
        "length",
        "status",
        "json",
        "send",
        "err",
        "PostZone",
        "idzona",
        "body",
        "create",
        "PutZone",
        "params",
        "id",
        "descripcion",
        "descZona",
        "updateOne",
        "IdZona",
        "$set",
        "DesZona",
        "FechaUltMod",
        "DATE_UTC",
        "UsuarioMod",
        "DelZone",
        "deleteOne"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;AAEAA,OAAO,CAACC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqB,iBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXC,sBAAUC,IAAV,GACDC,IADC,CAED,UAAAC,IAAI,EACD;AACI,qBAAQA,IAAI,CAACC,MAAL,IAAa,CAAb,IAAgBD,IAAI,IAAE,IAAvB,GAA6BJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,IAArB,CAA7B,GACEJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB,yBAArB,CADT;AAEH,aANH,WASD,UAAAC,GAAG,EACA;AACI,qBAAOT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBC,GAArB,CAAP;AACH,aAZH,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;;AAiBAZ,OAAO,CAACa,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,kBAAOX,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACPW,YAAAA,MADO,GACEZ,GAAG,CAACa,IADN;AAAA;AAAA,mBAEPX,sBAAUY,MAAV,CAAiBF,MAAjB,EACDR,IADC,CAED,UAAAC,IAAI,EACD;AACI,qBAAQA,IAAI,CAACC,MAAL,IAAa,CAAb,IAAgBD,IAAI,IAAE,IAAvB,GAA6BJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,IAArB,CAA7B,GACFJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB,yBAArB,CADL;AAEH,aANH,WASD,UAAAC,GAAG,EACA;AACI,qBAAOT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBC,GAArB,CAAP;AACH,aAZH,CAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAkBAZ,OAAO,CAACiB,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgB,kBAAOf,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACNW,YAAAA,MADM,GACCZ,GAAG,CAACgB,MAAJ,CAAWC,EADZ;AAENC,YAAAA,WAFM,GAEMlB,GAAG,CAACa,IAAJ,CAASM,QAFf;AAAA;AAAA,mBAGNjB,sBAAUkB,SAAV,CAAoB;AAACC,cAAAA,MAAM,EAACT;AAAR,aAApB,EAAoC;AAACU,cAAAA,IAAI,EAAC;AAACC,gBAAAA,OAAO,EAACL,WAAT;AAAqBM,gBAAAA,WAAW,EAAC,sCAA4BC,QAA7D;AAAsEC,gBAAAA,UAAU,EAAC;AAAjF;AAAN,aAApC,EACDtB,IADC,CAED,UAAAC,IAAI,EACD;AACI,qBAAQA,IAAI,CAACC,MAAL,IAAa,CAAb,IAAgBD,IAAI,IAAE,IAAvB,GAA6BJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,IAArB,CAA7B,GACFJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB,yBAArB,CADL;AAEH,aANH,WASD,UAAAC,GAAG,EACA;AACI,qBAAOT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBC,GAArB,CAAP;AACH,aAZH,CAHM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAmBAZ,OAAO,CAAC6B,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgB,kBAAO3B,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACNW,YAAAA,MADM,GACGZ,GAAG,CAACgB,MAAJ,CAAWC,EADd;AAAA;AAAA,mBAENf,sBAAU0B,SAAV,CAAoB;AAACP,cAAAA,MAAM,EAACT;AAAR,aAApB,EACDR,IADC,CAED,UAAAC,IAAI,EACD;AACI,qBAAQA,IAAI,CAACC,MAAL,IAAa,CAAb,IAAgBD,IAAI,IAAE,IAAvB,GAA6BJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,IAArB,CAA7B,GACEJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB,yBAArB,CADT;AAEH,aANH,WASD,UAAAC,GAAG,EACA;AACI,qBAAOT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBC,GAArB,CAAP;AACH,aAZH,CAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\controllers",
      "sourcesContent": [
        "import {FORMATS_FOR_DATE_AND_TIME} from \"../ENV\";\r\nimport Cat_zonas from '../models/cat_zonas.model';\r\n\r\nexports.GetZonesList=async (req,res)=>{\r\n    await Cat_zonas.find()\r\n        .then\r\n        (data=>\r\n            {\r\n                return (data.length==0||data!=null)?res.status(200).json(data)\r\n                        :res.status(404).send(\"No se encontraron Zonas\");\r\n            }\r\n        )\r\n        .catch\r\n        (err =>\r\n            {\r\n                return res.status(500).send(err);\r\n            }\r\n        )\r\n};\r\n\r\nexports.PostZone=async (req,res)=>{\r\n    const idzona = req.body;\r\n    await Cat_zonas.create(idzona)\r\n        .then\r\n        (data=>\r\n            {\r\n                return (data.length==0||data!=null)?res.status(200).json(data)\r\n                    :res.status(404).send(\"No se encontraron Zonas\");\r\n            }\r\n        )\r\n        .catch\r\n        (err =>\r\n            {\r\n                return res.status(500).send(err);\r\n            }\r\n        )\r\n};\r\n\r\nexports.PutZone=async (req,res)=>{\r\n    const idzona=req.params.id;\r\n    const descripcion=req.body.descZona;\r\n    await Cat_zonas.updateOne({IdZona:idzona},{$set:{DesZona:descripcion,FechaUltMod:FORMATS_FOR_DATE_AND_TIME().DATE_UTC,UsuarioMod:'BRIAN'}})\r\n        .then\r\n        (data=>\r\n            {\r\n                return (data.length==0||data!=null)?res.status(200).json(data)\r\n                    :res.status(404).send(\"No se encontraron Zonas\");\r\n            }\r\n        )\r\n        .catch\r\n        (err =>\r\n            {\r\n                return res.status(500).send(err);\r\n            }\r\n        )\r\n};\r\n\r\nexports.DelZone=async (req,res)=>{\r\n    const idzona = req.params.id;\r\n    await Cat_zonas.deleteOne({IdZona:idzona})\r\n        .then\r\n        (data=>\r\n            {\r\n                return (data.length==0||data!=null)?res.status(200).json(data)\r\n                        :res.status(404).send(\"No se encontraron Zonas\");\r\n            }\r\n        )\r\n        .catch\r\n        (err =>\r\n            {\r\n                return res.status(500).send(err);\r\n            }\r\n        )\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1556825458052
  },
  "{\"sourceRoot\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"filename\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\\\\src\\\\models\\\\cat_zonas.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\infra\\\\proyectos\\\\appdemorest\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\infra\\proyectos\\appdemorest",
      "filename": "C:\\infra\\proyectos\\appdemorest\\src\\models\\cat_zonas.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\infra\\proyectos\\appdemorest",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\infra\\proyectos\\appdemorest\\src\\models\\cat_zonas.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\infra\\proyectos\\appdemorest\\src\\models\\cat_zonas.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\models",
        "sourceFileName": "cat_zonas.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _ENV = require(\"../ENV\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nmodule.exports = _mongoose[\"default\"].model('cat_zonas', new Schema({\n  IdZona: {\n    type: Number\n  },\n  DesZona: {\n    type: String\n  },\n  CapacidadPor: {\n    type: Number\n  },\n  Fila: {\n    type: Number\n  },\n  AsientosPorFilas: {\n    type: Number\n  },\n  Activo: {\n    type: String,\n    \"default\": 'S'\n  },\n  Borrado: {\n    type: String,\n    \"default\": 'N'\n  },\n  FechaReg: {\n    type: String,\n    \"default\": (0, _ENV.FORMATS_FOR_DATE_AND_TIME)().DATE_UTC\n  },\n  UsuarioReg: {\n    type: String,\n    \"default\": 'REST'\n  },\n  FechaUltMod: {\n    type: String,\n    \"default\": (0, _ENV.FORMATS_FOR_DATE_AND_TIME)().DATE_UTC\n  },\n  UsuarioMod: {\n    type: String,\n    \"default\": 'REST'\n  },\n  \"res_zonas_servicios\": [{\n    IdProdServEsp: 0,\n    Activo: {\n      type: String,\n      \"default\": 'S'\n    },\n    Borrado: {\n      type: String,\n      \"default\": 'N'\n    },\n    FechaReg: {\n      type: String,\n      \"default\": (0, _ENV.FORMATS_FOR_DATE_AND_TIME)().DATE_UTC\n    },\n    UsuarioReg: {\n      type: String,\n      \"default\": 'REST'\n    },\n    FechaUltMod: {\n      type: String,\n      \"default\": (0, _ENV.FORMATS_FOR_DATE_AND_TIME)().DATE_UTC\n    },\n    UsuarioMod: {\n      type: String,\n      \"default\": 'REST'\n    }\n  }],\n  \"cat_zonas_archivos\": [{\n    IdRutaArchivo: {\n      type: Number\n    },\n    RutaArchivo: {\n      type: String\n    },\n    TipoArchivo: {\n      type: String\n    },\n    Principal: {\n      type: String\n    },\n    Activo: {\n      type: String,\n      \"default\": 'S'\n    },\n    Borrado: {\n      type: String,\n      \"default\": 'N'\n    },\n    FechaReg: {\n      type: String,\n      \"default\": (0, _ENV.FORMATS_FOR_DATE_AND_TIME)().DATE_UTC\n    },\n    UsuarioReg: {\n      type: String,\n      \"default\": 'REST'\n    },\n    FechaUltMod: {\n      type: String,\n      \"default\": (0, _ENV.FORMATS_FOR_DATE_AND_TIME)().DATE_UTC\n    },\n    UsuarioMod: {\n      type: String,\n      \"default\": 'REST'\n    }\n  }]\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdF96b25hcy5tb2RlbC5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCIsIklkWm9uYSIsInR5cGUiLCJOdW1iZXIiLCJEZXNab25hIiwiU3RyaW5nIiwiQ2FwYWNpZGFkUG9yIiwiRmlsYSIsIkFzaWVudG9zUG9yRmlsYXMiLCJBY3Rpdm8iLCJCb3JyYWRvIiwiRmVjaGFSZWciLCJEQVRFX1VUQyIsIlVzdWFyaW9SZWciLCJGZWNoYVVsdE1vZCIsIlVzdWFyaW9Nb2QiLCJJZFByb2RTZXJ2RXNwIiwiSWRSdXRhQXJjaGl2byIsIlJ1dGFBcmNoaXZvIiwiVGlwb0FyY2hpdm8iLCJQcmluY2lwYWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxNQUFNLEdBQUNDLHFCQUFTRCxNQUF0QjtBQUNBRSxNQUFNLENBQUNDLE9BQVAsR0FBZUYscUJBQVNHLEtBQVQsQ0FBZSxXQUFmLEVBQTJCLElBQUlKLE1BQUosQ0FFdEM7QUFDSUssRUFBQUEsTUFBTSxFQUFDO0FBQUNDLElBQUFBLElBQUksRUFBQ0M7QUFBTixHQURYO0FBRUlDLEVBQUFBLE9BQU8sRUFBQztBQUFDRixJQUFBQSxJQUFJLEVBQUNHO0FBQU4sR0FGWjtBQUdJQyxFQUFBQSxZQUFZLEVBQUM7QUFBQ0osSUFBQUEsSUFBSSxFQUFDQztBQUFOLEdBSGpCO0FBSUlJLEVBQUFBLElBQUksRUFBQztBQUFDTCxJQUFBQSxJQUFJLEVBQUNDO0FBQU4sR0FKVDtBQUtJSyxFQUFBQSxnQkFBZ0IsRUFBQztBQUFDTixJQUFBQSxJQUFJLEVBQUNDO0FBQU4sR0FMckI7QUFNSU0sRUFBQUEsTUFBTSxFQUFDO0FBQUNQLElBQUFBLElBQUksRUFBQ0csTUFBTjtBQUFhLGVBQVE7QUFBckIsR0FOWDtBQU9JSyxFQUFBQSxPQUFPLEVBQUM7QUFBQ1IsSUFBQUEsSUFBSSxFQUFDRyxNQUFOO0FBQWEsZUFBUTtBQUFyQixHQVBaO0FBUUlNLEVBQUFBLFFBQVEsRUFBQztBQUFDVCxJQUFBQSxJQUFJLEVBQUNHLE1BQU47QUFBYSxlQUFRLHNDQUE0Qk87QUFBakQsR0FSYjtBQVNJQyxFQUFBQSxVQUFVLEVBQUM7QUFBQ1gsSUFBQUEsSUFBSSxFQUFDRyxNQUFOO0FBQWEsZUFBUTtBQUFyQixHQVRmO0FBVUlTLEVBQUFBLFdBQVcsRUFBQztBQUFDWixJQUFBQSxJQUFJLEVBQUNHLE1BQU47QUFBYSxlQUFRLHNDQUE0Qk87QUFBakQsR0FWaEI7QUFXSUcsRUFBQUEsVUFBVSxFQUFDO0FBQUNiLElBQUFBLElBQUksRUFBQ0csTUFBTjtBQUFhLGVBQVE7QUFBckIsR0FYZjtBQVlJLHlCQUNBLENBQ0k7QUFDSVcsSUFBQUEsYUFBYSxFQUFDLENBRGxCO0FBRUlQLElBQUFBLE1BQU0sRUFBQztBQUFDUCxNQUFBQSxJQUFJLEVBQUNHLE1BQU47QUFBYSxpQkFBUTtBQUFyQixLQUZYO0FBR0lLLElBQUFBLE9BQU8sRUFBQztBQUFDUixNQUFBQSxJQUFJLEVBQUNHLE1BQU47QUFBYSxpQkFBUTtBQUFyQixLQUhaO0FBSUlNLElBQUFBLFFBQVEsRUFBQztBQUFDVCxNQUFBQSxJQUFJLEVBQUNHLE1BQU47QUFBYSxpQkFBUSxzQ0FBNEJPO0FBQWpELEtBSmI7QUFLSUMsSUFBQUEsVUFBVSxFQUFDO0FBQUNYLE1BQUFBLElBQUksRUFBQ0csTUFBTjtBQUFhLGlCQUFRO0FBQXJCLEtBTGY7QUFNSVMsSUFBQUEsV0FBVyxFQUFDO0FBQUNaLE1BQUFBLElBQUksRUFBQ0csTUFBTjtBQUFhLGlCQUFRLHNDQUE0Qk87QUFBakQsS0FOaEI7QUFPSUcsSUFBQUEsVUFBVSxFQUFDO0FBQUNiLE1BQUFBLElBQUksRUFBQ0csTUFBTjtBQUFhLGlCQUFRO0FBQXJCO0FBUGYsR0FESixDQWJKO0FBd0JJLHdCQUNBLENBQ0k7QUFDSVksSUFBQUEsYUFBYSxFQUFDO0FBQUNmLE1BQUFBLElBQUksRUFBQ0M7QUFBTixLQURsQjtBQUVJZSxJQUFBQSxXQUFXLEVBQUM7QUFBQ2hCLE1BQUFBLElBQUksRUFBQ0c7QUFBTixLQUZoQjtBQUdJYyxJQUFBQSxXQUFXLEVBQUM7QUFBQ2pCLE1BQUFBLElBQUksRUFBQ0c7QUFBTixLQUhoQjtBQUlJZSxJQUFBQSxTQUFTLEVBQUM7QUFBQ2xCLE1BQUFBLElBQUksRUFBQ0c7QUFBTixLQUpkO0FBS0lJLElBQUFBLE1BQU0sRUFBQztBQUFDUCxNQUFBQSxJQUFJLEVBQUNHLE1BQU47QUFBYSxpQkFBUTtBQUFyQixLQUxYO0FBTUlLLElBQUFBLE9BQU8sRUFBQztBQUFDUixNQUFBQSxJQUFJLEVBQUNHLE1BQU47QUFBYSxpQkFBUTtBQUFyQixLQU5aO0FBT0lNLElBQUFBLFFBQVEsRUFBQztBQUFDVCxNQUFBQSxJQUFJLEVBQUNHLE1BQU47QUFBYSxpQkFBUSxzQ0FBNEJPO0FBQWpELEtBUGI7QUFRSUMsSUFBQUEsVUFBVSxFQUFDO0FBQUNYLE1BQUFBLElBQUksRUFBQ0csTUFBTjtBQUFhLGlCQUFRO0FBQXJCLEtBUmY7QUFTSVMsSUFBQUEsV0FBVyxFQUFDO0FBQUNaLE1BQUFBLElBQUksRUFBQ0csTUFBTjtBQUFhLGlCQUFRLHNDQUE0Qk87QUFBakQsS0FUaEI7QUFVSUcsSUFBQUEsVUFBVSxFQUFDO0FBQUNiLE1BQUFBLElBQUksRUFBQ0csTUFBTjtBQUFhLGlCQUFRO0FBQXJCO0FBVmYsR0FESjtBQXpCSixDQUZzQyxDQUEzQixDQUFmIiwic291cmNlUm9vdCI6IkM6XFxpbmZyYVxccHJveWVjdG9zXFxhcHBkZW1vcmVzdFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5pbXBvcnQge0VOVklST05NRU5ULEZPUk1BVFNfRk9SX0RBVEVfQU5EX1RJTUV9IGZyb20gXCIuLi9FTlZcIjtcclxuY29uc3QgU2NoZW1hPW1vbmdvb3NlLlNjaGVtYTtcclxubW9kdWxlLmV4cG9ydHM9bW9uZ29vc2UubW9kZWwoJ2NhdF96b25hcycsbmV3IFNjaGVtYVxyXG4oXHJcbiAgICB7XHJcbiAgICAgICAgSWRab25hOnt0eXBlOk51bWJlcn0sXHJcbiAgICAgICAgRGVzWm9uYTp7dHlwZTpTdHJpbmd9LFxyXG4gICAgICAgIENhcGFjaWRhZFBvcjp7dHlwZTpOdW1iZXJ9LFxyXG4gICAgICAgIEZpbGE6e3R5cGU6TnVtYmVyfSxcclxuICAgICAgICBBc2llbnRvc1BvckZpbGFzOnt0eXBlOk51bWJlcn0sXHJcbiAgICAgICAgQWN0aXZvOnt0eXBlOlN0cmluZyxkZWZhdWx0OidTJ30sXHJcbiAgICAgICAgQm9ycmFkbzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonTid9LFxyXG4gICAgICAgIEZlY2hhUmVnOnt0eXBlOlN0cmluZyxkZWZhdWx0OkZPUk1BVFNfRk9SX0RBVEVfQU5EX1RJTUUoKS5EQVRFX1VUQ30sXHJcbiAgICAgICAgVXN1YXJpb1JlZzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonUkVTVCd9LFxyXG4gICAgICAgIEZlY2hhVWx0TW9kOnt0eXBlOlN0cmluZyxkZWZhdWx0OkZPUk1BVFNfRk9SX0RBVEVfQU5EX1RJTUUoKS5EQVRFX1VUQ30sXHJcbiAgICAgICAgVXN1YXJpb01vZDp7dHlwZTpTdHJpbmcsZGVmYXVsdDonUkVTVCd9LFxyXG4gICAgICAgIFwicmVzX3pvbmFzX3NlcnZpY2lvc1wiOlxyXG4gICAgICAgIFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgSWRQcm9kU2VydkVzcDowLFxyXG4gICAgICAgICAgICAgICAgQWN0aXZvOnt0eXBlOlN0cmluZyxkZWZhdWx0OidTJ30sXHJcbiAgICAgICAgICAgICAgICBCb3JyYWRvOnt0eXBlOlN0cmluZyxkZWZhdWx0OidOJ30sXHJcbiAgICAgICAgICAgICAgICBGZWNoYVJlZzp7dHlwZTpTdHJpbmcsZGVmYXVsdDpGT1JNQVRTX0ZPUl9EQVRFX0FORF9USU1FKCkuREFURV9VVEN9LFxyXG4gICAgICAgICAgICAgICAgVXN1YXJpb1JlZzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonUkVTVCd9LFxyXG4gICAgICAgICAgICAgICAgRmVjaGFVbHRNb2Q6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Rk9STUFUU19GT1JfREFURV9BTkRfVElNRSgpLkRBVEVfVVRDfSxcclxuICAgICAgICAgICAgICAgIFVzdWFyaW9Nb2Q6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J1JFU1QnfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXSxcclxuICAgICAgICBcImNhdF96b25hc19hcmNoaXZvc1wiOlxyXG4gICAgICAgIFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgSWRSdXRhQXJjaGl2bzp7dHlwZTpOdW1iZXJ9LFxyXG4gICAgICAgICAgICAgICAgUnV0YUFyY2hpdm86e3R5cGU6U3RyaW5nfSxcclxuICAgICAgICAgICAgICAgIFRpcG9BcmNoaXZvOnt0eXBlOlN0cmluZ30sXHJcbiAgICAgICAgICAgICAgICBQcmluY2lwYWw6e3R5cGU6U3RyaW5nfSxcclxuICAgICAgICAgICAgICAgIEFjdGl2bzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonUyd9LFxyXG4gICAgICAgICAgICAgICAgQm9ycmFkbzp7dHlwZTpTdHJpbmcsZGVmYXVsdDonTid9LFxyXG4gICAgICAgICAgICAgICAgRmVjaGFSZWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Rk9STUFUU19GT1JfREFURV9BTkRfVElNRSgpLkRBVEVfVVRDfSxcclxuICAgICAgICAgICAgICAgIFVzdWFyaW9SZWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6J1JFU1QnfSxcclxuICAgICAgICAgICAgICAgIEZlY2hhVWx0TW9kOnt0eXBlOlN0cmluZyxkZWZhdWx0OkZPUk1BVFNfRk9SX0RBVEVfQU5EX1RJTUUoKS5EQVRFX1VUQ30sXHJcbiAgICAgICAgICAgICAgICBVc3VhcmlvTW9kOnt0eXBlOlN0cmluZyxkZWZhdWx0OidSRVNUJ31cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH1cclxuKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "cat_zonas.model.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "module",
        "exports",
        "model",
        "IdZona",
        "type",
        "Number",
        "DesZona",
        "String",
        "CapacidadPor",
        "Fila",
        "AsientosPorFilas",
        "Activo",
        "Borrado",
        "FechaReg",
        "DATE_UTC",
        "UsuarioReg",
        "FechaUltMod",
        "UsuarioMod",
        "IdProdServEsp",
        "IdRutaArchivo",
        "RutaArchivo",
        "TipoArchivo",
        "Principal"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACA,IAAMA,MAAM,GAACC,qBAASD,MAAtB;AACAE,MAAM,CAACC,OAAP,GAAeF,qBAASG,KAAT,CAAe,WAAf,EAA2B,IAAIJ,MAAJ,CAEtC;AACIK,EAAAA,MAAM,EAAC;AAACC,IAAAA,IAAI,EAACC;AAAN,GADX;AAEIC,EAAAA,OAAO,EAAC;AAACF,IAAAA,IAAI,EAACG;AAAN,GAFZ;AAGIC,EAAAA,YAAY,EAAC;AAACJ,IAAAA,IAAI,EAACC;AAAN,GAHjB;AAIII,EAAAA,IAAI,EAAC;AAACL,IAAAA,IAAI,EAACC;AAAN,GAJT;AAKIK,EAAAA,gBAAgB,EAAC;AAACN,IAAAA,IAAI,EAACC;AAAN,GALrB;AAMIM,EAAAA,MAAM,EAAC;AAACP,IAAAA,IAAI,EAACG,MAAN;AAAa,eAAQ;AAArB,GANX;AAOIK,EAAAA,OAAO,EAAC;AAACR,IAAAA,IAAI,EAACG,MAAN;AAAa,eAAQ;AAArB,GAPZ;AAQIM,EAAAA,QAAQ,EAAC;AAACT,IAAAA,IAAI,EAACG,MAAN;AAAa,eAAQ,sCAA4BO;AAAjD,GARb;AASIC,EAAAA,UAAU,EAAC;AAACX,IAAAA,IAAI,EAACG,MAAN;AAAa,eAAQ;AAArB,GATf;AAUIS,EAAAA,WAAW,EAAC;AAACZ,IAAAA,IAAI,EAACG,MAAN;AAAa,eAAQ,sCAA4BO;AAAjD,GAVhB;AAWIG,EAAAA,UAAU,EAAC;AAACb,IAAAA,IAAI,EAACG,MAAN;AAAa,eAAQ;AAArB,GAXf;AAYI,yBACA,CACI;AACIW,IAAAA,aAAa,EAAC,CADlB;AAEIP,IAAAA,MAAM,EAAC;AAACP,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ;AAArB,KAFX;AAGIK,IAAAA,OAAO,EAAC;AAACR,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ;AAArB,KAHZ;AAIIM,IAAAA,QAAQ,EAAC;AAACT,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ,sCAA4BO;AAAjD,KAJb;AAKIC,IAAAA,UAAU,EAAC;AAACX,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ;AAArB,KALf;AAMIS,IAAAA,WAAW,EAAC;AAACZ,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ,sCAA4BO;AAAjD,KANhB;AAOIG,IAAAA,UAAU,EAAC;AAACb,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ;AAArB;AAPf,GADJ,CAbJ;AAwBI,wBACA,CACI;AACIY,IAAAA,aAAa,EAAC;AAACf,MAAAA,IAAI,EAACC;AAAN,KADlB;AAEIe,IAAAA,WAAW,EAAC;AAAChB,MAAAA,IAAI,EAACG;AAAN,KAFhB;AAGIc,IAAAA,WAAW,EAAC;AAACjB,MAAAA,IAAI,EAACG;AAAN,KAHhB;AAIIe,IAAAA,SAAS,EAAC;AAAClB,MAAAA,IAAI,EAACG;AAAN,KAJd;AAKII,IAAAA,MAAM,EAAC;AAACP,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ;AAArB,KALX;AAMIK,IAAAA,OAAO,EAAC;AAACR,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ;AAArB,KANZ;AAOIM,IAAAA,QAAQ,EAAC;AAACT,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ,sCAA4BO;AAAjD,KAPb;AAQIC,IAAAA,UAAU,EAAC;AAACX,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ;AAArB,KARf;AASIS,IAAAA,WAAW,EAAC;AAACZ,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ,sCAA4BO;AAAjD,KAThB;AAUIG,IAAAA,UAAU,EAAC;AAACb,MAAAA,IAAI,EAACG,MAAN;AAAa,iBAAQ;AAArB;AAVf,GADJ;AAzBJ,CAFsC,CAA3B,CAAf",
      "sourceRoot": "C:\\infra\\proyectos\\appdemorest\\src\\models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\nimport {ENVIRONMENT,FORMATS_FOR_DATE_AND_TIME} from \"../ENV\";\r\nconst Schema=mongoose.Schema;\r\nmodule.exports=mongoose.model('cat_zonas',new Schema\r\n(\r\n    {\r\n        IdZona:{type:Number},\r\n        DesZona:{type:String},\r\n        CapacidadPor:{type:Number},\r\n        Fila:{type:Number},\r\n        AsientosPorFilas:{type:Number},\r\n        Activo:{type:String,default:'S'},\r\n        Borrado:{type:String,default:'N'},\r\n        FechaReg:{type:String,default:FORMATS_FOR_DATE_AND_TIME().DATE_UTC},\r\n        UsuarioReg:{type:String,default:'REST'},\r\n        FechaUltMod:{type:String,default:FORMATS_FOR_DATE_AND_TIME().DATE_UTC},\r\n        UsuarioMod:{type:String,default:'REST'},\r\n        \"res_zonas_servicios\":\r\n        [\r\n            {\r\n                IdProdServEsp:0,\r\n                Activo:{type:String,default:'S'},\r\n                Borrado:{type:String,default:'N'},\r\n                FechaReg:{type:String,default:FORMATS_FOR_DATE_AND_TIME().DATE_UTC},\r\n                UsuarioReg:{type:String,default:'REST'},\r\n                FechaUltMod:{type:String,default:FORMATS_FOR_DATE_AND_TIME().DATE_UTC},\r\n                UsuarioMod:{type:String,default:'REST'}\r\n            }\r\n        ],\r\n        \"cat_zonas_archivos\":\r\n        [\r\n            {\r\n                IdRutaArchivo:{type:Number},\r\n                RutaArchivo:{type:String},\r\n                TipoArchivo:{type:String},\r\n                Principal:{type:String},\r\n                Activo:{type:String,default:'S'},\r\n                Borrado:{type:String,default:'N'},\r\n                FechaReg:{type:String,default:FORMATS_FOR_DATE_AND_TIME().DATE_UTC},\r\n                UsuarioReg:{type:String,default:'REST'},\r\n                FechaUltMod:{type:String,default:FORMATS_FOR_DATE_AND_TIME().DATE_UTC},\r\n                UsuarioMod:{type:String,default:'REST'}\r\n            }\r\n        ]\r\n    }\r\n));"
      ]
    },
    "sourceType": "script",
    "mtime": 1556588075942
  }
}